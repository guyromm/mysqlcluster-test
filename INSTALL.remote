#host listings:
#mysqlctr.txt mysqld.txt datanodes.txt
#newmachines.txt <-- fresh installs


#drop machines
cat delmachines.txt | \
    xargs -P0 -n1 -I{} cloudservers --username $APIUSER --apikey $APIKEY delete {}

#instantiate machines via cloudservers
cat newmachines.txt | \
    xargs -P0 -n1 -I{} cloudservers --user $APIUSER --apikey $APIKEY boot   --image 69 --flavor 2  --key ~/.ssh/authorized_keys2 {}

#install known_hosts on all machines
cat newmachines.txt | xargs -P0 -n1 -I{} scp -o StrictHostKeyChecking=no known_hosts {}:~/.ssh/

#install some base packages
cat newmachines.txt | \
    xargs -P0 -n1 -I{} ssh {} \
    'apt-get update; \
    apt-get install -y git-core emacs23-nox git-core screen python-setuptools python-dev telnet devscripts libmysqlclient-dev ; \
    easy_install MySQL-python'


#clone our repository
cat newmachines.txt | \
    xargs -P0 -n1 -I{} ssh {} 'cd /root ; git clone git://github.com/guyromm/mysqlcluster-test.git'


#update our repo
cat newmachines.txt datanodes.txt mysqld.txt mysqlctr.txt | \
    xargs -P0 -n1 -I{} ssh {} 'cd /root/mysqlcluster-test ; git pull'

#remove mysql pull
cat newmachines.txt | \
    xargs -P0 -n1 -I{} ssh {} 'cd /root/mysqlcluster-test ; rm -rf mysqlcluster-7.1.13.tar.gz ; rm -rf mysql-cluster-gpl-7.1.13-linux-x86_64-glibc23'

#run install script on repos to pull cluster software
cat newmachines.txt | \
    xargs -P0 -n1 -I{} ssh {} 'cd /root/mysqlcluster-test ; ./install.sh'

#generate a local hosts file from the primary interfaces
cat datanodes.txt mysqld.txt mysqlctr.txt newmachines.txt | sort | uniq | \
    xargs -P0 -n1 -I{} ssh {} \
    "annotate-output +{} ifconfig eth0 | grep 'inet addr'" | awk '{print "\""$4" "$1"\""}' | sed s/^\"addr:// | sed s/\"$// > hosts
echo '127.0.0.1	localhost' >> hosts

#install the hosts file on each remote machine
cat newmachines.txt datanodes.txt mysqld.txt mysqlctr.txt | sort | uniq | xargs -P0 -n1 -I{} scp hosts {}:~/mysqlcluster-test/
cat newmachines.txt datanodes.txt mysqld.txt mysqlctr.txt | sort | uniq | \
    xargs -P0 -n1 -I{} ssh {} 'echo "" > /etc/hosts ; \
    echo "#extra:" >> /etc/hosts ; \
    cat /root/mysqlcluster-test/hosts| cat >> /etc/hosts' 
# | egrep -v `cat /etc/hostname`  
	     	    
#remove hosts file installation
cat newmachines.txt | \
    xargs -P0 -n1 -I{} ssh {} 'cat /etc/hosts | sed /#extra\:*$/q > /etc/hosts'

#init mysqld database
cat mysqld.txt | \
     xargs -P0 -n1 -I{} ssh {} 'cd /root/mysqlcluster-test/mysqlc ; \
     scripts/mysql_install_db --no-defaults --datadir=$HOME/mysqlcluster-test/my_cluster/mysqld_data/'

#launch ndb_mgmd on mysqlctr
cat mysqlctr.txt | \
    xargs -P0 -n1 -I{} ssh {} 'cd ~/mysqlcluster-test/my_cluster/ ; \
    mkdir -p ndb_data ; \
    $HOME/mysqlcluster-test/mysqlc/bin/ndb_mgmd \
     -f ~/mysqlcluster-test/my_cluster/conf/config.ini --ndb-nodeid=40 --configdir=$HOME/mysqlcluster-test/my_cluster/conf/'

#erase data from nodes
cat datanodes.txt | \
    xargs -P0 -n1 -I{} ssh {} 'rm -rf ~/mysqlcluster-test/my_cluster/ndb_data/*'

#launch ndb data nodes
cat datanodes.txt | \
    xargs -P0 -n1 -I{} ssh {} 'cd ~/mysqlcluster-test/my_cluster/ ; \
    mkdir -p ndb_data ; \
    ../mysqlc/bin/ndbd -c mysqlctr:1186'

#initial ndb data node launch
cat newmachines.txt | \
    xargs -P0 -n1 -I{} ssh {} 'cd ~/mysqlcluster-test/my_cluster/ ; \
    mkdir -p ndb_data ; \
    ../mysqlc/bin/ndbd --initial -c mysqlctr:1186'


#kill ndb data nodes
cat killnodes | xargs -P0 -n1 -I{} ssh {} 'pkill -f ndbd'

#check running datanodes
cat datanodes.txt | \
    xargs -P0 -n1 -I{} ssh {} "ps ax | grep 'ndbd -c' | egrep -v 'grep(.*)ndbd' | annotate-output +{} wc -l" | egrep -v '(Started|Finished)'

#check ndb_mgm
ssh mysqlctr mysqlcluster-test/mysqlc/bin/ndb_mgm -e show


#start up mysqld
ssh mysqld 'cd ~/mysqlcluster-test/ ; mysqlc/bin/mysqld --defaults-file=/root/mysqlcluster-test/my_cluster/conf/my.cnf'

#see if mysqld is running
ssh mysqld "ps aux | grep mysqld"

#connect to mysql on remote host
cd ~/mysqlcluster-test ; mysqlc/bin/mysql -uroot -P5000 -hmysqld

#shutdown mysqld on remote host
ssh mysqld 'cd ~/mysqlcluster-test ; mysqlc/bin/mysqladmin -uroot -P5000 -hmysqld shutdown'

#shutdown ndb_mgm
ssh mysqlctr mysqlcluster-test/mysqlc/bin/ndb_mgm -e shutdown

#install a schema on the db

#see memory usage
./usage.sh

#have a look at loads
cat datanodes.txt mysqlctr.txt mysqld.txt | xargs -P0 -n1 -I{} ssh {} 'annotate-output +{} uptime' | egrep -v '(Started|Finished)'

#queries to check integrity - should all be equal:
select count(*) from ndb_test;
select max(id) from ndb_test;
select sum(f) from (select 1 f from ndb_test) foo;

#should not return results:
select * from ndb_test where md5(id)<>indexed_id limit 1;

#tail the log of data nodes
cat datanodes.txt | xargs -P0 -n1 -I{} ssh {} 'annotate-output +{} tail -f mysqlcluster-test/my_cluster/ndb_data/ndb_*log' 

#restore data nodes from backup
cat datanodes.txt | xargs -P0 -n1 -I{} ssh {} '\
    cd mysqlcluster-test ; \
    mysqlc/bin/ndb_restore -c mysqlctr:1186 -n `hostname | sed s/mysql//` --backupid=1 --backup-path=my_cluster/ndb_data/BACKUP/BACKUP-1/
    '